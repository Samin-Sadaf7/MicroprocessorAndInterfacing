EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Lab4.com_ -- emu8086 assembler version: 4.08  
 
[ 4/15/2024  --  10:14:06 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       org 100h
[   2]    0100: EB 44                                 .data
[   3]    0102: 01 02 03 04 05 06 07 08 09            arr db 1, 2, 3, 4, 5, 6, 7, 8, 9
[   4]    010B: 00                                    a db 00h
[   5]    010C: 69 6E 70 75 74 20 28 74 68 65 20 76   prompt db 'input (the value of n in between 2 ~ 9): $'
                61 6C 75 65 20 6F 66 20 6E 20 69 6E 
                20 62 65 74 77 65 65 6E 20 32 20 7E 
                20 39 29 3A 20 24                   
[   6]    0136: 74 68 65 20 72 65 73 75 6C 74 20 69   output db 'the result is: $'
                73 3A 20 24                         
[   7]    0146:                                       .code
[   8]    0146:                                       main proc
[   9]    0146: 8C C8                                 mov ax, @data
[  10]    0148: 8E D8                                 mov ds, ax
[  11]    014A: 33 C0                                 xor ax, ax
[  12]        :                                       
[  13]    014C: BE 02 01                              mov si, offset arr
[  14]    014F: BF 0B 01                              mov di, offset a
[  15]    0152: BA 0C 01                              mov dx, offset prompt
[  16]    0155: B4 09                                 mov ah, 09h
[  17]    0157: CD 21                                 int 21h
[  18]    0159: B4 01                                 mov ah, 01h
[  19]    015B: CD 21                                 int 21h
[  20]    015D: 8A C8                                 mov cl, al
[  21]    015F: 80 E9 30                              sub cl, 48
[  22]        :                                       
[  23]        :                                       
[  24]    0162:                                       loop_1:
[  25]    0162: 8B 04                                 mov ax, [si]
[  26]    0164: F7 E8                                 imul ax
[  27]    0166: B4 00                                 mov ah, 0
[  28]    0168: 03 D8                                 add bx, ax
[  29]    016A: 83 C6 01                              add si, 1
[  30]        :                                       
[  31]    016D: E2 F3                                 loop loop_1
[  32]        :                                       
[  33]        :                                       
[  34]        :                                       main endp
[  35]        :                                       end main
[  36]        :                                       ret
[  37]        :                                       
 
===================================================================================================
 




===================================================================================================
